@model PropertyRentalManagementMVC.Models.Appointment

@{
    ViewBag.Title = "Make an appointment with the manager";
    if (Session["tenantId"] == null)       //dont show page if tenant not logIn in Web Site
    {
        Response.Redirect("~/Home/Index"); //redirect in home page
    }
}

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("Property Rental Management", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Home", "Index", "Home")</li>
                <li>@Html.ActionLink("Log Out", "LogOut", "Tenant")</li>
            </ul>
        </div>
    </div>
</div>

<h2>Make an appointment with the manager  </h2>
<h4>Tenant ID: @Session["tenantId"].ToString() </h4>
<h4>Tenant First Name: @Session["tenantFirstName"].ToString() </h4>


@using (Html.BeginForm("Appointment", "Tenant", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AppoitmentTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppoitmentTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppoitmentTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerId, new { htmlAttributes = new { @class = "form-control", @Value = "1" } })
                @Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenantId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenantId, new { htmlAttributes = new { @class = "form-control", @Value = @Session["tenantId"].ToString(), @readonly = "readonly" } })
                @Session["tenantFirstName"].ToString()
                @Session["tenantLastName"].ToString()
                @Html.ValidationMessageFor(model => model.TenantId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send an appointment" class="btn btn-default" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <label class="label-success">@ViewBag.SuccessMessage</label>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <label class="label-danger">@ViewBag.DublicateMessage</label>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Apartment", "Tenant")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



